CREATE TABLE IF NOT EXISTS `boya_fit_1`.`Body_Parts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`));

CREATE TABLE IF NOT EXISTS `boya_fit_1`.`Muscles` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `BodyPartId` INT NULL,
  PRIMARY KEY (`Id`),
  INDEX `MuscleToBodyPart_idx` (`BodyPartId` ASC) VISIBLE,
  CONSTRAINT `MuscleToBodyPart`
    FOREIGN KEY (`BodyPartId`)
    REFERENCES `boya_fit_1`.`Body_Parts` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE IF NOT EXISTS `boya_fit_1`.`Equipments` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Id`));

CREATE TABLE IF NOT EXISTS `boya_fit_1`.`Exercises` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(180) NULL,
  `Difficulty` INT NOT NULL,
  `Calories` INT NULL,
  `TimeSeconds` INT NULL,
  `EquipmentId` INT NULL,
  `BodyPartId` INT NULL,
  `Instructions` LONGTEXT NULL ,
  INDEX `EquipmentToExercise_idx` (`EquipmentId` ASC) VISIBLE,
  INDEX `BodyPartToExercise_idx` (`BodyPartId` ASC) VISIBLE,
  INDEX `OrderIndex` (`Difficulty` ASC, `BodyPartId` ASC) VISIBLE,
  PRIMARY KEY (`Id`),
  CONSTRAINT `EquipmentToExercise`
    FOREIGN KEY (`EquipmentId`)
    REFERENCES `boya_fit_1`.`Equipments` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `BodyPartToExercise`
    FOREIGN KEY (`BodyPartId`)
    REFERENCES `boya_fit_1`.`Body_Parts` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE IF NOT EXISTS `boya_fit_1`.`Excercise_Muscles` (
  `ExerciseId` INT NOT NULL,
  `MuscleId` INT NOT NULL,
  `Priority` INT NOT NULL,
  INDEX `ByExercise` (`ExerciseId` ASC) VISIBLE,
  INDEX `ByMuscle` (`MuscleId` ASC) VISIBLE,
  CONSTRAINT `ToExercise`
    FOREIGN KEY (`ExerciseId`)
    REFERENCES `boya_fit_1`.`Exercises` (`Id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `ToMuscle`
    FOREIGN KEY (`MuscleId`)
    REFERENCES `boya_fit_1`.`Muscles` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE IF NOT EXISTS `boya_fit_1`.`Users` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(180) NULL,
  `Email` VARCHAR(180) NULL,
  `Password` VARCHAR(45) NULL,
  `FitnessLevel` INT NULL,
  `Weight` INT NULL,
  `Height` INT NULL,
  `Picture` VARCHAR(250) NULL,
  `Latlon` POINT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `UsersByName` (`Name` ASC) VISIBLE);


CREATE TABLE IF NOT EXISTS `boya_fit_1`.`Users_History` (
  `UserId` INT NOT NULL,
  `ExerciseId` INT NOT NULL,
  `Time` DATETIME NOT NULL,
  INDEX `fk_Users_History_1_idx` (`UserId` ASC) VISIBLE,
  INDEX `fk_Users_History_2_idx` (`ExerciseId` ASC) VISIBLE,
  INDEX `idx_by_date_users_history` (`Time` ASC) VISIBLE,
  CONSTRAINT `fk_Users_History_1`
    FOREIGN KEY (`UserId`)
    REFERENCES `boya_fit_1`.`Users` (`Id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_History_2`
    FOREIGN KEY (`ExerciseId`)
    REFERENCES `boya_fit_1`.`Exercises` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE IF NOT EXISTS `boya_fit_1`.`Rating` (
  `UserId` INT NULL,
  `ExerciseId` INT NULL,
  `Rating` INT NULL,
  `Description` VARCHAR(250) NULL,
  `Time` DATETIME NULL,
  INDEX `fk_Rating_1_idx` (`UserId` ASC) VISIBLE,
  INDEX `fk_Rating_2_idx` (`ExerciseId` ASC) VISIBLE,
  INDEX `idx_Time_Rating` (`Time` DESC, `Rating` DESC) VISIBLE,
  CONSTRAINT `fk_Rating_1`
    FOREIGN KEY (`UserId`)
    REFERENCES `boya_fit_1`.`Users` (`Id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rating_2`
    FOREIGN KEY (`ExerciseId`)
    REFERENCES `boya_fit_1`.`Exercises` (`Id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION);

CREATE TABLE  IF NOT EXISTS `boya_fit_1`.`Users_Friends` (
  `UserId1` INT NULL,
  `UserId2` INT NULL,
  INDEX `fk_Users_Friends_1_idx` (`UserId1` ASC) VISIBLE,
  INDEX `fk_Users_Friends_2_idx` (`UserId2` ASC) VISIBLE,
  CONSTRAINT `fk_Users_Friends_1`
    FOREIGN KEY (`UserId1`)
    REFERENCES `boya_fit_1`.`Users` (`Id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_Friends_2`
    FOREIGN KEY (`UserId2`)
    REFERENCES `boya_fit_1`.`Users` (`Id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION);

CREATE TABLE IF NOT EXISTS `boya_fit_1`.`Gyms` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Adress` VARCHAR(180) NOT NULL,
  `City` VARCHAR(45) NOT NULL,
  `Zip` VARCHAR(45),
  `Country` VARCHAR(45) NOT NULL,
  `CountryShortCode` VARCHAR(45),
  `IsKids` TINYINT NOT NULL,
  `IsActive` TINYINT NOT NULL,
  `Logo_Photo` LONGTEXT NOT NULL,
  `Latlon` POINT NOT NULL,
  PRIMARY KEY (`Id`));

CREATE VIEW `User_History_View` AS
select
	DISTINCT
		uh.Time,
        uh.UserId,
        e.*,
        bp.Name BodyPartName
FROM
	Users_History uh,
    Exercises e,
    Body_Parts bp
WHERE
	uh.ExerciseId = e.Id
And
	e.BodyPartId = bp.Id
order by
	uh.Time;

CREATE  OR REPLACE VIEW `Users_View` AS
SELECT Id,Name,Email,Password,FitnessLevel,Weight,Height,Picture,ST_X(Latlon) x,ST_Y(Latlon) y FROM Users;


CREATE  OR REPLACE VIEW `Exercises_View` AS
	SELECT 
            Exercises.Id Id,
            Exercises.Name Name,
            Exercises.Difficulty Difficulty,
            Exercises.Calories Calories,
            Exercises.TimeSeconds TimeSeconds,
            Exercises.EquipmentId EquipmentId,
            Exercises.BodyPartId BodyPartId,
            Exercises.Instructions Instructions,
            Body_Parts.Name BodyPartName,
            Equipments.Name EquipmentName,
            avg(Rating.Rating) rating
        FROM 
            Exercises,
            Body_Parts,
            Rating,
            Equipments
        WHERE
	        Exercises.BodyPartId = Body_Parts.Id
        AND
            Rating.ExerciseId = Exercises.Id
        AND
	        Equipments.Id = Exercises.EquipmentId
        GROUP BY
            1,2,3,4,5,6,7,8,9,10;

CREATE  OR REPLACE VIEW `Exercises_Full_View` AS
	select
	e.*,
    m.Id 	MuscleId ,
    m.Name 	MuscleName,
    em.Priority Priority
	from
		Exercises_View e,
		Muscles m ,
		Excercise_Muscles em
	WHERE
		e.Id = em.ExerciseId
	AND
		m.Id = em.MuscleId
	ORDER BY
		em.Priority;
